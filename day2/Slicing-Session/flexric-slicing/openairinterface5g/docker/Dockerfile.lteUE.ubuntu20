#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface BUILD service
#   Valid for Ubuntu20.04
#
#---------------------------------------------------------------------

FROM ran-base:latest AS lte-ue-base

FROM ran-build:latest AS lte-ue-build 


#start from scratch for target executable
FROM ubuntu:focal as oai-lte-ue
ARG BUILD_OPTION
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Paris

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
        software-properties-common \
        procps \
        libsctp1 \
        libboost-chrono1.71.0 \
        libboost-date-time1.71.0 \
        libboost-filesystem1.71.0 \
        libboost-regex1.71.0 \
        libboost-serialization1.71.0 \
        libboost-thread1.71.0 \
        libboost-system1.71.0 \
        libboost-program-options1.71.0 \
        tzdata \
        liblapacke \
        libatlas3-base \
        libconfig9 \
        openssl \
        net-tools \
        python \
        python3 \
        python3-six \
        python3-requests \
        libpython3.8 \
        libusb-1.0-0 \
        iputils-ping \
        iproute2 \
        iperf3 \
        iperf && \
# if the --sanitize option was used to build, additional packages are required
    /bin/bash -c 'if [[ "$BUILD_OPTION" = "--sanitize" ]]; then DEBIAN_FRONTEND=noninteractive apt-get install --yes \
        libasan5 \
        libubsan1 \
        liblapacke; fi' && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /opt/oai-lte-ue/bin
COPY --from=lte-ue-build \
    /oai-ran/cmake_targets/ran_build/build/lte-uesoftmodem \
    /oai-ran/cmake_targets/nas_sim_tools/build/conf2uedata \
    /oai-ran/cmake_targets/nas_sim_tools/build/nvram \
    /oai-ran/cmake_targets/nas_sim_tools/build/usim \
    ./

COPY ./docker/scripts/lte_ue_entrypoint.sh ./entrypoint.sh
COPY --from=lte-ue-build \
    /oai-ran/cmake_targets/ran_build/build/liboai_eth_transpro.so \
    /oai-ran/cmake_targets/ran_build/build/librfsimulator.so \
    /oai-ran/cmake_targets/ran_build/build/liboai_usrpdevif.so \
    /oai-ran/cmake_targets/ran_build/build/libcoding.so \
    /oai-ran/cmake_targets/ran_build/build/libparams_libconfig.so \
    /oai-ran/cmake_targets/ran_build/build/libdfts.so \
    /oai-ran/cmake_targets/ran_build/build/libtelnetsrv.so \
    /usr/local/lib/

# Now we are copying from builder-image the UHD files.
COPY --from=lte-ue-base /usr/local/bin/uhd_find_devices /usr/local/bin
COPY --from=lte-ue-base /usr/local/lib/libuhd.so.4.4.0 /usr/local/lib
COPY --from=lte-ue-base /usr/local/lib/uhd/utils/uhd_images_downloader.py /opt/oai-lte-ue/bin

RUN /bin/bash -c "ln -s /usr/local/lib/liboai_usrpdevif.so /usr/local/lib/liboai_device.so" && \
    ldconfig && \
    ldd /opt/oai-lte-ue/bin/lte-uesoftmodem

WORKDIR /opt/oai-lte-ue
COPY --from=lte-ue-base /tini /tini
CMD ["/opt/oai-lte-ue/bin/lte-uesoftmodem"]
ENTRYPOINT ["/tini", "-v", "--", "/opt/oai-lte-ue/bin/entrypoint.sh"]
